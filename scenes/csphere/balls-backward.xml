<?xml version='1.0' encoding='utf-8'?>
<!-- A test file for mitsuba-like scene xml file parser -->
<!-- Author: Qianyue He / Original credit goes to Wenzel Jakob -->
<!-- Only Steady state rendering are supported -->
<!-- Only RGB or rgb spectrums are supported -->
<scene version="1.1">
	<sensor type="perspective">
		<float name="near_clip" value="0.001"/>
		<float name="far_clip" value="2000"/>
		<float name="fov" value="39.3077"/>
        <integer name="sample_count" value="128"/>
        <integer name="max_bounce" value="6"/>
        <integer name="num_shadow_ray" value="4"/>       

        <boolean name="needs_grad" value="true"/>										<!-- Requires gradient -->
        <string name="gt_path" value="./outputs/pbr-balls-backward-pt.npy"/>			<!-- GT path -->

        <boolean name="use_rr" value="true"/>				<!-- Whether to use Russian roulette ray termination -->
        <boolean name="anti_alias" value="true"/>       	
        <boolean name="stratified_sampling" value="true"/>
        <boolean name="use_mis" value="true"/>				<!-- Whether to use multiple importance sampling -->
		
		<transform name="toWorld">
			<lookat target="2.78, 2.73, -7.99" origin="2.78, 2.73, -8.00" up="0, 1, 0"/>
		</transform>

		<film type="film">
			<integer name="width" value="512"/>
			<integer name="height" value="512"/>
			<integer name="sub_samples" value="8"/>
		</film>
	</sensor>

	<brdf type="fresnel-blend" id="fresnel">
		<rgb name="k_d" value="#CACACA"/>
		<!-- <rgb name="k_g" value="1.0"/>
		<rgb name="k_s" value="0.0"/> -->
		<rgb name="k_s" value="#343434"/>
		<rgb name="k_g" r="10" g="1000"/>
	</brdf>

	<brdf type="phong" id="diffuse">
		<rgb name="k_d" value="#D2D2D2"/>
		<rgb name="k_g" value="1.0"/>
		<rgb name="k_s" value="0.0"/>
	</brdf>

	<brdf type="lambertian" id="white">
		<rgb name="k_d" value="#FFFFFF"/>
		<rgb name="k_g" value="1.0"/>
		<rgb name="k_s" value="0.0"/>
	</brdf>

	<brdf type="phong" id="left_wall">
		<rgb name="k_d" value="#DD2525"/>
		<rgb name="k_g" value="1.0"/>
		<rgb name="k_s" value="0.0"/>
	</brdf>

	<brdf type="phong" id="right_wall">
		<bool name="needs_grad" value="true"/>
		<rgb name="k_d" value="#00FF00"/>
		<rgb name="k_g" value="1.0"/>
		<rgb name="k_s" value="0.0"/>
	</brdf>

	<brdf type="phong" id="light">
		<rgb name="k_d" value="#CCCCCC"/>
		<rgb name="k_g" value="1.0"/>
		<rgb name="k_s" value="0.0"/>
	</brdf>

	<bsdf type="det-refraction" id="glass">
		<rgb name="k_d" value="#FAFAFA"/>
		<medium type="transparent">
			<rgb name="u_a" value="0.0"/>
			<rgb name="u_s" value="0.0"/>
			<rgb name="par" value="0.0"/>
			<float name="ior" value="1.4"/>
		</medium>
	</bsdf>

	<emitter type="area" id="area">
		<rgb name="emission" value="70.0, 63.2, 60.3"/>
		<rgb name="scaler" value="0.6"/>
	</emitter>

	<shape type="obj">
		<string name="filename" value="../meshes/cornell/cbox_luminaire.obj"/>
		<transform name="toWorld">
			<translate x="0" y="-0.001" z="0"/>
		</transform>
		<ref type="material" id="light"/>
		<ref type="emitter" id="area"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="../meshes/cornell/cbox_floor.obj"/>
		<ref type="material" id="diffuse"/>
		<transform name="toWorld">
			<translate x="0" y="0.0" z="0"/>
		</transform>
	</shape>

	<shape type="obj">
		<string name="filename" value="../meshes/cornell/cbox_ceiling.obj"/>
		<ref type="material" id="diffuse"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="../meshes/cornell/cbox_back.obj"/>
		<ref type="material" id="diffuse"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="../meshes/cornell/cbox_greenwall.obj"/>
		<ref type="material" id="right_wall"/>
	</shape>

	<shape type="obj">
		<string name="filename" value="../meshes/cornell/cbox_redwall.obj"/>

		<ref type="material" id="left_wall"/>
	</shape>

	<shape type="sphere">
		<point name="center" x="4.1" y="1.0" z="2.75"/>
		<float name="radius" value="1.0"/>
		<ref type="material" id="fresnel"/>
	</shape>

	<shape type="sphere">
		<point name="center" x="2.75" y="3.5" z="2.0"/>
		<float name="radius" value="1.0"/>
		<ref type="material" id="glass"/>
	</shape>

	<shape type="sphere">
		<point name="center" x="1.3" y="1.0" z="2.75"/>
		<float name="radius" value="1.0"/>
		<ref type="material" id="diffuse"/>
	</shape>

	<world name="yes!">
		<rgb name="skybox" value="0.0"/>
		<rgb name="ambient" value="0.0"/>
		<medium type="transparent">
			<rgb name="u_a" value="0.0"/>
			<rgb name="u_s" value="0.0"/>
			<rgb name="par" value="0.0"/>
			<float name="ior" value="1.0"/>
		</medium>
	</world>
</scene>